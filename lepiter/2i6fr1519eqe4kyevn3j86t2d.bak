{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-29T18:00:38.532932+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-02-10T10:07:30.604509+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "WHhd/DzpDQCfw7lGDtlPKg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : " [[AC]]: Hey! Should we  aim for a paper for onward that builds on the paper about examples with a bigger focus on lepiter: describing the lepiter model and its integration with the code model from Pharo. The very nice case that we have is that doing that enables refactorings and code references to work across both code and documentation."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-02-07T16:21:43.425824+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-02-07T16:21:51.774116+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "k0wtp/DpDQC4BC/5DNjU6w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "{{gtPackage:name=PaperEddOnward25}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-29T17:59:21.474777+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-29T17:59:22.534049+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "/afF9zzpDQCfSLu3DtlPKg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Thu 24 Apr 2025 — Submission deadline\nFri 6 Jun 2025 — First-round notification\nThu 17 Jul 2025 — Second-round submission\nMon 11 Aug 2025 — Final notification"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-29T17:59:00.271224+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-29T17:59:05.853164+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "lSCC9jzpDQCeI78ADtlPKg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Deadlines:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:44:46.287999+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:44:46.287999+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "K1mqSyjqDQCcdv/rAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "• example snippets"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:44:47.523939+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:44:47.523939+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "vTW9SyjqDQCcfX8jAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "• code search in snippets"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:11:41.029809+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:44:47.528585+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "oHiBzifqDQCYqyLcAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "• refactorings in snippets"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-02-10T10:12:16.17489+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-02-10T10:38:05.545631+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "hv1t1yfqDQCZ1PcMAKoUCg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : " [[TG]] A shorter paper would be on “co-evolving documentation and code”. This would be rather straightforward to write:"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-02-10T10:08:31.910703+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-02-10T10:12:41.596467+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "JQIQyifqDQCYIM1rAKoUCg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[[AC]] Yes, can also work. We could still target that for onward, and leave the more generic one for later. Maybe the more generic one could be then for Programming"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-02-10T10:37:49.203687+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-02-10T10:38:03.309993+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "YCrOMijqDQCbVpKVAKoUCg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Onward! paper on co-evolving documentation and code"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:44.987731+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:44.987731+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "VUj6LijqDQCaoehJAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "I think the paper should be more generic than EDD, something like Moldable Knowledge/Notebooks, where EDD is one part."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:48.007306+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:48.007306+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "/lMoLyjqDQCaqNE4AKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The focus could be on how to integrate notebooks or literate programming into an IDE to offer better ways to create/maintain/find documentation and more flexible ways to create custom tools and analysis (through combining snippets). We could start from the idea that documentation should not be static and textual, and tools should not be monolitic and ridgid."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:51.877119+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:51.877119+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "XWljLyjqDQCar9iUAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "We could describe the lepiter model as a way to extend the code metamodel with concepts related to notebooks/literate programming, like knolwege base, page, snippet and links. Those would complement packages, classes and methods. Classes and methods would be one way to structure programs, pages and snippets would be another, and links could provide a way to link the two.\nIf classes, methods, pages and snippets are part of the same model, then actions like refactorings and searching for references can apply to both. We can search for references to a class in both code and documentation, and when renaming a class update its references in both code and documentation. Also links can come from places that are non textual. For example from a Wardley Map node we could link to a class."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:55.275473+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:55.275473+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "wzuXLyjqDQCatrccAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The moldable part could be then done through snippets, as we can have different types of snippets linked through various types of links. Also pages grouping snippets could be structued and viewed in different ways. Now we view a page as a tree of snippets, but we want to have an experiment where we show them on a canvas were they can be moved around and arranged in any way.\nExamples and views would become then one mechanism that can be used in pages through custom snippets. WardleyMap, rewrites, etc. could be others."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:57.501375+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:57.501375+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "PDy5LyjqDQCavckaAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "And it would not just be limited to documentation but also to creating custom tools and analysis by combining snippets. For example, pharo, python, bash, refactoring snippets can be the bases for creating various types of tools. One example could be a tool to migrare to a new version of an API. It could be a page with code, rewrite snippets, showing old code, new code, and have the rewrite snippets to do the transformation."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-01-29T17:59:24.117217+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:36:57.508317+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "nPrt9zzpDQCfenkrDtlPKg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "And a future-work argument for all this would be that in the world of LLMs having tools created from small components could enable LLM do undertand those components and their composition and produce new custom tools easier. (edited) "
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-02-10T10:11:45.909793+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-02-10T10:11:45.909793+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "dimg1SfqDQCZlJIsAKoUCg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[[AC]]: Tried to write down some more ideas about what the paper can be about."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:09:16.285992+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:09:16.285992+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "QRC1zCfqDQCYVBdJAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "I think these are interesting sources that we can use:"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [
												{
													"__type" : "textSnippet",
													"children" : {
														"__type" : "snippets",
														"items" : [ ]
													},
													"createEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"createTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2025-02-10T10:10:08.437649+01:00"
														}
													},
													"editEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"editTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2025-02-10T10:10:08.437649+01:00"
														}
													},
													"uid" : {
														"__type" : "uid",
														"uidString" : "Jd/QzyfqDQCYvWyaAKoUCg=="
													},
													"paragraphStyle" : {
														"__type" : "textStyle"
													},
													"string" : "Introducing Lepiter: Knowledge Management + Multi-language Notebooks + Moldable Development\nMore than a decade ago, we set out to make the inside of software systems explainable. We started from the observation that software engineering is primarily a decision making activity about lots of ever changing data points represented in code and other artifacts. We conjectured that tools are essential in this endeavor but for them to be effective they have to be adaptable to the context of each single development problem. They have to be moldable."
												}
											]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:09:20.108645+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:09:20.108645+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Dm7vzCfqDQCYYAEoAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "[Introducing Lepiter](https://lepiter.io/feenk/introducing-lepiter--knowledge-management--e2p6apqsz5npq7m4xte0kkywn/)"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:09:44.453129+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:09:44.453129+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "R+dizifqDQCYpLVkAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Extending Lepiter with dedicated snippets"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [
												{
													"__type" : "textSnippet",
													"children" : {
														"__type" : "snippets",
														"items" : [ ]
													},
													"createEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"createTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2025-02-10T10:10:19.036759+01:00"
														}
													},
													"editEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"editTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2025-02-10T10:10:19.036759+01:00"
														}
													},
													"uid" : {
														"__type" : "uid",
														"uidString" : "4ppy0CfqDQCY0yLEAKoUCg=="
													},
													"paragraphStyle" : {
														"__type" : "textStyle"
													},
													"string" : "The AT Protocol is meant to offer a flexible foundation for social media. For example, a key proposition is to enable the individual to control the algorithm of what is being presented. Of course, there is no single algorithm. There can be many. These algorithms require programming. And programming benefits from dedicated environments."
												}
											]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:10:34.808764+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:10:49.005953+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "YkNj0SfqDQCY4qmYAKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "[gt4atproto: a dedicated environment for AT Protocol](https://lepiter.io/feenk/gt4atproto--a-dedicated-environment-for-at-7kcp8pwy6dcnomlljmtvl3wx2/)"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [
												{
													"__type" : "textSnippet",
													"children" : {
														"__type" : "snippets",
														"items" : [ ]
													},
													"createEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"createTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2025-02-10T10:08:27.437057+01:00"
														}
													},
													"editEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"editTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2025-02-10T10:10:20.301112+01:00"
														}
													},
													"uid" : {
														"__type" : "uid",
														"uidString" : "2LzLySfqDQCX6yjAAKoUCg=="
													},
													"paragraphStyle" : {
														"__type" : "textStyle"
													},
													"string" : "Embedding and replying to arbitrary Bluesky posts with gt4atproto\ngt4atproto is a dedicated environment for AT Protocol built on top of Glamorous Toolkit. We announced it last week, but we already added a new ability: embedding and replying to arbitrary Bluesky posts from a Lepiter page."
												}
											]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:11:00.091679+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-02-10T10:11:09.797786+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "ThLl0ifqDQCZF/O0AKoUCg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "[Embedding and replying to arbitrary Bluesky posts with gt4atproto](https://lepiter.io/feenk/embedding-and-replying-to-arbitrary-bluesk-7kcp8psy4wfhsqmc1x6f26x68/)"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-02-10T10:09:14.110436+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-02-10T10:09:14.110436+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "/uaTzCfqDQCYR0p5AKoUCg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[[TG]]: Most of it we have. The different layouts we do not have"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-02-10T10:19:55.390175+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-02-10T10:37:24.358966+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "JAvN8ifqDQCaKZ6CAKoUCg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Programming paper on Moldable Notebooks"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-01-29T17:58:59.606826+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-02-10T10:44:26.872531+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Topic Notes"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "a5fc77f6-3ce9-0d00-9e12-74660ed94f2a"
	}
}